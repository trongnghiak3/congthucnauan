<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Trang C√° Nh√¢n</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body class="bg-gray-100">
  <%- include('partials/header') %>
<div class="container mx-auto py-8">
  <div class="bg-white p-8 rounded-2xl shadow-lg max-w-3xl mx-auto flex flex-col md:flex-row items-center gap-8">

    <!-- Avatar -->
    <div class="relative w-40 h-40">
      <img id="avatarPreview" src="<%= user.avatar || 'https://i.imgur.com/2Nv5jJb.png' %>" 
           alt="Avatar" 
           class="w-full h-full rounded-full object-cover shadow-lg border-4 border-gray-300">
      <!-- Icon c·∫≠p nh·∫≠t -->
      <button class="absolute bottom-2 right-2 bg-blue-500 text-white p-2 rounded-full shadow-md hover:bg-blue-600 transition">
        ‚úèÔ∏è
      </button>
    </div>

    <!-- Th√¥ng tin h·ªì s∆° -->
    <div class="flex flex-col justify-center">
      <h1 class="text-3xl font-semibold text-gray-800"><%= user.username %></h1>
      <p class="text-gray-600 text-lg mt-1">üìß <%= user.email %></p>
      <button onclick="openModalPofile()" class="mt-4 bg-blue-500 text-white px-5 py-2 rounded-lg font-medium shadow-md hover:bg-blue-600 transition">
        ‚úèÔ∏è C·∫≠p nh·∫≠t h·ªì s∆°
      </button>
    </div>
  </div>

  <!-- POST Section -->
  <div class="bg-white shadow-lg rounded-lg p-6 mt-8">
    <div class="flex justify-between">
      <h1 class="text-4xl font-bold text-gray-800 mb-4">C√¥ng th·ª©c c·ªßa b·∫°n</h1>
      <button onclick="openModal()" class="flex items-center bg-blue-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-blue-600 transition">
        <span class="mr-2"></span>
        <span class="text-xl font-bold">+</span>
      </button>
    </div>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-5">
      <% if (userRecipes && userRecipes.length > 0) { %>
        <% userRecipes.forEach(function(recipe) { %>
          <%- include('partials/recipeCard', { recipe: recipe }) %>
        <% }); %>
      <% } else { %>
        <p class="text-gray-500 text-lg text-center col-span-full">B·∫°n ch∆∞a ƒëƒÉng c√¥ng th·ª©c n√†o.</p>
      <% } %>
    </div>
  </div>

  <!-- C√¥ng th·ª©c y√™u th√≠ch -->
  <div class="bg-white shadow-lg rounded-lg p-6 mt-8">
    <h1 class="text-4xl font-bold text-gray-800 mb-4">C√¥ng th·ª©c y√™u th√≠ch</h1>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-5">
      <% if (favoriteRecipes && favoriteRecipes.length > 0) { %>
        <% favoriteRecipes.forEach(function(recipe) { %>
          <%- include('partials/recipeCard', { recipe: recipe }) %>
        <% }); %>
      <% } else { %>
        <p class="text-gray-500 text-lg text-center col-span-full">B·∫°n ch∆∞a c√≥ c√¥ng th·ª©c y√™u th√≠ch n√†o.</p>
      <% } %>
    </div>
  </div>

  <!-- Modal -->
  <div id="updateProfileModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-2xl shadow-lg w-full max-w-lg relative">
      <!-- N√∫t ƒë√≥ng -->
      <button onclick="closeModalPofile()" class="absolute top-3 right-3 text-gray-500 hover:text-gray-800 text-xl">&times;</button>
      <h2 class="text-2xl font-semibold text-gray-800 text-center mb-4">C·∫≠p nh·∫≠t h·ªì s∆°</h2>
      <form id="updateProfileForm">
        <!-- Avatar -->
        <div class="flex flex-col items-center mb-4">
          <img id="avatarPreview" src="<%= user.avatar || 'https://i.imgur.com/2Nv5jJb.png' %>" 
               alt="Avatar" 
               class="w-24 h-24 rounded-full object-cover shadow-md border">
          <input type="file" id="avatarInput" class="mt-2 text-sm text-gray-500">
        </div>

        <!-- T√™n ng∆∞·ªùi d√πng -->
        <div class="mb-4">
          <label class="block text-gray-700 font-medium">T√™n ng∆∞·ªùi d√πng</label>
          <input type="text" id="username" value="<%= user.username %>" 
                 class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400">
        </div>

        <!-- Email -->
        <div class="mb-4">
          <label class="block text-gray-700 font-medium">Email</label>
          <input type="email" id="email" value="<%= user.email %>" 
                 class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400">
        </div>

        <!-- N√∫t h√†nh ƒë·ªông -->
        <div class="flex justify-end gap-3">
          <button type="button" onclick="closeModal()" class="px-5 py-2 rounded-lg bg-gray-300 hover:bg-gray-400 transition">
            H·ªßy
          </button>
          <button type="submit" class="px-5 py-2 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition">
            üíæ L∆∞u
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Modal Recipe -->
  <div id="recipeModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-lg w-full max-w-5xl shadow-lg flex flex-col gap-4 text-sm">
      <div class="grid grid-cols-3 gap-3">
        <!-- C·ªôt 1: H√¨nh ·∫£nh -->
        <div class="space-y-2">
          <label class="font-medium block">Xem tr∆∞·ªõc ·∫£nh:</label>
          <img id="image-preview" class="w-full h-28 rounded-lg border hidden">
          <input type="file" id="image-input" accept="image/*" class="w-full p-2 border rounded text-sm">
        </div>

        <!-- C·ªôt 2 & 3: Form nh·∫≠p li·ªáu -->
        <div class="col-span-2 space-y-2">
          <input type="text" placeholder="T√™n c√¥ng th·ª©c" class="w-full p-2 border rounded text-sm">
          <textarea placeholder="M√¥ t·∫£" class="w-full p-2 border rounded text-sm"></textarea>
          <div id="category-list" class="grid grid-cols-3 gap-2 p-3 border rounded-lg bg-gray-50 text-sm">
            <% categories.forEach(category => { %>
              <label class="flex items-center gap-1 p-1 bg-white rounded-lg cursor-pointer">
                <input type="checkbox" name="categories" value="<%= category.loai_mon_id %>" class="w-4 h-4">
                <span><%= category.ten_loai %></span>
              </label>
            <% }) %>
          </div>
        </div>
      </div>

      <!-- Nguy√™n li·ªáu -->
      <div class="space-y-2">
        <label class="font-medium">Nguy√™n li·ªáu:</label>
        <div class="grid grid-cols-5 gap-2">
          <input type="text" id="new-ingredient" placeholder="T√™n nguy√™n li·ªáu" class="p-2 border rounded text-sm">
          <input type="number" id="new-quantity" placeholder="S·ªë l∆∞·ª£ng" class="p-2 border rounded text-sm">
          <input type="text" id="new-unit" placeholder="ƒê∆°n v·ªã (g, ml...)" class="p-2 border rounded text-sm">
          <input type="text" id="new-note" placeholder="Ghi ch√∫" class="p-2 border rounded text-sm">
          <button type="button" class="bg-green-500 text-white px-3 py-1 rounded text-xs" onclick="addIngredient()">Th√™m</button>
        </div>
        <div id="ingredient-list" class="mt-2 border p-2 rounded-lg bg-gray-50 text-sm overflow-auto"></div>
      </div>

      <!-- Th√¥ng tin b·ªï sung -->
      <div class="grid grid-cols-3 gap-2">
        <div>
          <label class="font-medium">Th·ªùi gian n·∫•u (ph√∫t):</label>
          <input type="number" min="1" class="w-full p-2 border rounded text-sm">
        </div>
        <div>
          <label class="font-medium">S·ªë ph·∫ßn ƒÉn:</label>
          <input type="number" id="servings" min="1" class="w-full p-2 border rounded text-sm">
        </div>
        <div>
          <label class="font-medium">ƒê·ªô kh√≥:</label>
          <select id="difficulty" class="w-full p-2 border rounded text-sm">
            <option value="D·ªÖ">D·ªÖ</option>
            <option value="Trung b√¨nh">Trung b√¨nh</option>
            <option value="Kh√≥">Kh√≥</option>
          </select>
        </div>
      </div>

      <!-- H∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc -->
      <div class="space-y-2">
        <label class="font-medium">H∆∞·ªõng d·∫´n l√†m:</label>
        <div class="grid grid-cols-4 gap-2">
          <input type="text" id="step-input" placeholder="Nh·∫≠p b∆∞·ªõc h∆∞·ªõng d·∫´n" class="p-2 border rounded text-sm col-span-3">
          <button type="button" class="bg-green-500 text-white px-3 py-1 rounded text-xs" onclick="addStep()">Th√™m</button>
        </div>
        <table class="w-full border rounded-lg text-sm">
          <thead>
            <tr class="bg-gray-100">
              <th class="p-2 text-left">B∆∞·ªõc</th>
              <th class="p-2 text-left">M√¥ t·∫£</th>
              <th class="p-2 text-center">H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody id="step-list" class="bg-white"></tbody>
        </table>
      </div>

      <!-- Video ho·∫∑c YouTube -->
      <div class="space-y-2">
        <label class="font-medium">Ch·ªçn Video ho·∫∑c URL YouTube:</label>
        <input type="file" id="video-input" accept="video/*" class="w-full p-2 border rounded text-sm">
        <video id="video-preview" class="w-full rounded-lg border mt-2 hidden" controls></video>
        <input type="text" id="youtube-url" placeholder="Nh·∫≠p URL YouTube" class="w-full p-2 border rounded text-sm">
        <div id="youtube-preview" class="hidden">
          <iframe id="youtube-frame" class="w-full rounded-lg mt-2" height="200" frameborder="0" allowfullscreen></iframe>
        </div>
      </div>

      <!-- N√∫t h√†nh ƒë·ªông -->
      <div class="mt-2 flex justify-end gap-2">
        <button type="button" class="bg-gray-300 px-3 py-1 rounded-lg text-xs" onclick="closeModal()">H·ªßy</button>
        <button type="button" class="bg-blue-500 text-white px-3 py-1 rounded-lg text-xs" onclick="saveRecipe()">L∆∞u</button>
      </div>
    </div>
  </div>
</div>


  <script>
    function showUpdateForm() {
      document.getElementById("profileInfo").classList.add("hidden");
      document.getElementById("updateForm").classList.remove("hidden");
    }
    function hideUpdateForm() {
      document.getElementById("updateForm").classList.add("hidden");
      document.getElementById("profileInfo").classList.remove("hidden");
    }
    function openModal() {
        document.getElementById("recipeModal").classList.remove("hidden");
      }
      function closeModal() {
        document.getElementById("recipeModal").classList.add("hidden");
      }
      // 
            function addIngredient() {
        const ingredient = document.getElementById("new-ingredient").value.trim();
        const quantity = document.getElementById("new-quantity").value.trim();
        const unit = document.getElementById("new-unit").value.trim();
        const note = document.getElementById("new-note").value.trim();

        if (!ingredient || !quantity || !unit) {
          alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin nguy√™n li·ªáu!");
          return;
        }

        const ingredientList = document.getElementById("ingredient-list");
        const item = document.createElement("div");
        item.classList.add("p-2", "border-b", "flex", "justify-between", "items-center");

        item.innerHTML = `
          <span class="flex-1">
            <strong>${ingredient}</strong>: <span>${quantity} ${unit}</span> 
            ${note ? `- (<span class="note">${note}</span>)` : ""}
          </span>
          <div class="flex gap-2">
            <button class="text-blue-500 text-xs" onclick="editIngredient(this)">S·ª≠a</button>
            <button class="text-red-500 text-xs" onclick="this.parentElement.parentElement.remove()">X√≥a</button>
          </div>
        `;

        ingredientList.appendChild(item);

        // X√≥a n·ªôi dung √¥ nh·∫≠p sau khi th√™m
        document.getElementById("new-ingredient").value = "";
        document.getElementById("new-quantity").value = "";
        document.getElementById("new-unit").value = "";
        document.getElementById("new-note").value = "";
      }

      // H√†m ch·ªânh s·ª≠a nguy√™n li·ªáu
      function editIngredient(button) {
        const item = button.parentElement.parentElement;
        const name = item.querySelector("strong").innerText;
        const quantityUnit = item.querySelector("span:nth-child(2)").innerText.split(" ");
        const note = item.querySelector(".note") ? item.querySelector(".note").innerText : "";

        document.getElementById("new-ingredient").value = name;
        document.getElementById("new-quantity").value = quantityUnit[0];
        document.getElementById("new-unit").value = quantityUnit.slice(1).join(" ");
        document.getElementById("new-note").value = note;

        item.remove(); // X√≥a ph·∫ßn c≈© ƒë·ªÉ thay b·∫±ng b·∫£n ch·ªânh s·ª≠a
      }



      function addCategory() {
        const categoryInput = document.getElementById("new-category");
        const categoryList = document.getElementById("category-list");

        const name = categoryInput.value.trim();
        if (name !== "") {
          const div = document.createElement("div");
          div.classList.add("flex", "items-center", "gap-2");

          const checkbox = document.createElement("input");
          checkbox.type = "checkbox";
          checkbox.name = "categories";
          checkbox.value = name; // G√°n tr·ª±c ti·∫øp t√™n lo·∫°i m√≥n n·∫øu ch∆∞a c√≥ ID

          const textNode = document.createElement("span");
          textNode.textContent = name;

          div.appendChild(checkbox);
          div.appendChild(textNode);
          categoryList.appendChild(div);

          categoryInput.value = "";
        } else {
          alert("Vui l√≤ng nh·∫≠p t√™n lo·∫°i m√≥n!");
        }
      }

      // x·ªØ l√≠ b∆∞·ªõc h∆∞·ªõng d·∫´n l√†m
      function addStep() {
    let stepInput = document.getElementById("step-input");
    let stepText = stepInput.value.trim();
    if (stepText === "") return;

    let stepList = document.getElementById("step-list");
    let row = document.createElement("tr");

    row.innerHTML = `
        <td class="p-2">${stepList.children.length + 1}</td>
        <td class="p-2">${stepText}</td>
        <td class="p-2 text-center">
            <button class="text-red-500 text-xs" onclick="removeStep(this)">X√≥a</button>
        </td>
    `;

    stepList.appendChild(row);
    stepInput.value = "";
}

function removeStep(button) {
    let row = button.parentElement.parentElement;
    row.remove();

    // C·∫≠p nh·∫≠t l·∫°i s·ªë th·ª© t·ª± b∆∞·ªõc
    let stepList = document.getElementById("step-list");
    [...stepList.children].forEach((row, index) => {
        row.children[0].textContent = index + 1;
    });
}


      //xem tr∆∞·ªõc ·∫£nh
      document.getElementById("image-input").addEventListener("change", function (event) {
        const file = event.target.files[0];
        const preview = document.getElementById("image-preview");

        if (file) {
          const reader = new FileReader();
          reader.onload = function (e) {
            preview.src = e.target.result;
            preview.classList.remove("hidden");
          };
          reader.readAsDataURL(file);
        }
      });
      // h√†m savesave
  function saveRecipe() {
  const name = document.getElementById("recipe-name").value.trim();
  const description = document.getElementById("recipe-description").value.trim();
  const imageInput = document.getElementById("image-input").files[0];

  // L·∫•y danh s√°ch nguy√™n li·ªáu
  const ingredients = [];
  document.querySelectorAll("#ingredient-list div").forEach(div => {
    const text = div.firstChild.textContent.split(" - ");
    if (text.length >= 2) {
      const [name, quantityUnit] = text;
      const [quantity, unit] = quantityUnit.split(" ");
      ingredients.push({ name, quantity, unit: unit || "", note: "" });
    }
  });

  // L·∫•y danh s√°ch danh m·ª•c m√≥n
  const categories = [];
  document.querySelectorAll("#category-list input:checked").forEach(checkbox => {
    categories.push(checkbox.value);
  });

  // L·∫•y danh s√°ch c√°c b∆∞·ªõc h∆∞·ªõng d·∫´n
  const steps = [];
  document.querySelectorAll("#step-list li").forEach(li => {
    steps.push(li.firstChild.textContent.split(". ")[1]);
  });

  if (!name || !description) {
    alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin c√¥ng th·ª©c!");
    return;
  }

  // Chu·∫©n b·ªã d·ªØ li·ªáu ƒë·ªÉ g·ª≠i
  const formData = new FormData();
  formData.append("name", name);
  formData.append("description", description);
  formData.append("ingredients", JSON.stringify(ingredients));
  formData.append("categories", JSON.stringify(categories));
  formData.append("steps", JSON.stringify(steps));
  if (imageInput) {
    formData.append("image", imageInput);
  }

  fetch("/cong-thuc-cua-toi", {
    method: "POST",
    body: formData,
  })
    .then(response => response.json())
    .then(data => {
      alert(data.message);
      document.getElementById("recipeModal").reset();
      loadRecipes(); // Load l·∫°i danh s√°ch c√¥ng th·ª©c
    })
    .catch(error => console.error("L·ªói:", error));
}

  </script>
</body>
</html>
